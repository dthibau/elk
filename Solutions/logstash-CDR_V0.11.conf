#===================================================================================
#        INPUT
# on ne garde pas les 200
#===================================================================================
input {

	udp {
		codec => plain { charset => "ISO-8859-1" }
		port => 6018
    }
	file {
		codec => plain { charset => "ISO-8859-1"   }
		path => [ "/home/support/elk/CDR_GURI/SCRIPTS/CPP/output.log" ]
		start_position => "beginning"
		exclude => "*.gz"
		sincedb_path => '/home/elk/CDR_GURI/SCRIPTS/CPP/db200.db'
		type => 'code200'
	}
}

filter {
#On ne traite que les entrÃ©es "CDR_V2_net2accueil"
	if (!([type] =~ /code200/)){ 
		if (!([message] =~ /CDR_V2_net2accueil_Prod/)) {
			drop{}
		}
		
		if [message] =~ /CDR_V2_net2accueil_Prod_ERROR/{
		
			if [message] =~ /cause/ {
				grok {
					match => { "message" => "\"%{GREEDYDATA:service}\" \"\[%{GREEDYDATA:mydate}\]\" \"%{GREEDYDATA:erreur} - %{GREEDYDATA:detailErreur}\" \"IP source %{IP:clientip}\"" } 
				}
			}else{
				grok {
					match => { "message" => "\"%{GREEDYDATA:service}\" \"\[%{GREEDYDATA:mydate}\]\" \"%{GREEDYDATA:erreur}.\" \"IP source %{IP:clientip}\"" } 
				}
			}
			
			mutate { 
				add_field => { "type" => "no200_error" } 
			}
		}else{
			csv {
				columns => [ "service", "jesaispas3", "clientIPext","rien1", "dateCrochets","requete","codeRetourHTTP","tailleRetour","jesaispas2","certificat","protocole", "cypher", "navigateur" ]
				quote_char =>'"'
				separator => " "
				}
			grok{
				match => { "clientIPext" => "%{IP:clientip}\%%{INT:num}" }
			}
			
			
			grok {
				match => { "dateCrochets" => "\[%{GREEDYDATA:mydate}\]" }
			}
			mutate {
				remove_field => [ "clientIPext", "rien1", "dateCrochets" ]
			}

			if [requete] =~ /cdr\/amo\// {
				grok{
					match => { "requete" => "/cdr/amo/%{WORD:AMO}/%{GREEDYDATA}/%{GREEDYDATA:action} HTTP%{GREEDYDATA}" }
				}
			}elseif [requete] =~ /cdr\/accueil\/choixAMO\// {
				grok{
					match => { "requete" => "/cdr/accueil/choixAMO/%{WORD:AMO}/%{GREEDYDATA}/%{GREEDYDATA:action} HTTP%{GREEDYDATA}" }
				}
			}else{
				mutate {
					add_field => { "AMO" => "" }
				}
			}

			mutate { 
				add_field => { "type" => "no200_access" } 
			}
			
			
		}		
		
		geoip {
			source => "clientip"
		}
		
	}else{
		csv {
			columns => [ "mydate","nb200"]
			quote_char =>'"'
			separator => ";"
		}
		
	}
	grok {
			match => {"mydate" => "(?<jourParis>[0-9]{2})/(?<moisParis>[a-zA-Z]{3})/(?<anneeParis>[0-9]{4}):[0-9]{2}:[0-9]{2}:[0-9]{2}" }
	}

	mutate { 
		lowercase => ["moisParis"]
	}

	mutate {
		add_field => {"[@metadata][anneeParis]" => "%{anneeParis}"}
		add_field => {"[@metadata][moisParis]" => "%{moisParis}"}
		add_field => {"[@metadata][jourParis]" => "%{jourParis}"}
		add_field => {"[@metadata][dateIndex]" => "%{[@metadata][anneeParis]}-%{[@metadata][moisParis]}-%{[@metadata][jourParis]}"}
		remove_field => [ "anneeParis", "moisParis", "jourParis" ]
	}

	date {
		locale => "en"
		match => [ "mydate","dd/MMM/YYYY:HH:mm:ss", "ISO8601" ]
		timezone => "Europe/Paris"
    }
	mutate {
		remove_field => [ "mydate", "message" ]
	}

}
output {
	
	if ([type] =~ /code200/){
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "cdr-code200-%{+yyyy.MM.dd.HH}"
			user => "logstash"
			password => "logstash"
		}
	}else if([type] =~ /no200-access/){
			elasticsearch {
				hosts => ["localhost:9200"]
				index => "cdr-no200-access-%{+yyyy.MM.dd.HH}"
				user => "logstash"
				password => "logstash"
			}
	}else if([type] =~ /no200_error/){
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "cdr-no200-error-%{+yyyy.MM.dd.HH}"
			user => "logstash"
			password => "logstash"
		}
	}

	stdout { 
		codec => rubydebug 
	}

#	rabbitmq {
#                exchange => "logstash-cdr-exc"
#                exchange_type => "direct"
#                key => "logstash-cdr-key"
#                host => "elk"
#                user => "test"
#                password => "test"
#                workers => 4
#                durable => true
#                persistent => true
#        }
}		


